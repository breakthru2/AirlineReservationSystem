@model AirlineBooking.Models.FlightViewModel
@using AirlineBooking.Models;
@{
    /**/

    /**/

    ViewBag.Title = "Check Flight Availablity";
}

<style>
    .city-suggestion-widget {
        border-bottom: 1px solid #ddd !important;
        border-right: 1px solid #ddd !important;
        padding: 15px 10px !important;
        background: whitesmoke;
    }

    .default-div {
        padding: 20px 10px !important;
        border: 1px solid whitesmoke !important;
        margin-bottom: 20px;
    }
</style>

<h2>Check Flight Availablity</h2>

@if (TempData["Message"] != null)
{
    var message = (Message)TempData["Message"];
    if (message.MessageCategory == (int)MessageCategory.SUCCESS)
    {
        <div class="alert alert-success" role="alert">
            <h5>@message.MessageText</h5>
        </div>
    }
    if (message.MessageCategory == (int)MessageCategory.ERROR || message.MessageCategory == (int)MessageCategory.DANGER)
    {
        <div class="alert alert-danger" role="alert">
            <h5>@message.MessageText</h5>
        </div>
    }
    if (message.MessageCategory == (int)MessageCategory.INFO)
    {
        <div class="alert alert-info" role="alert">
            <h5>@message.MessageText</h5>
        </div>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.OriginCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OriginCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OriginCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DestinationCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DestinationCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DestinationCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search For Flight" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if (Model.ConnectingFlightList?.Count > 0)
{
    <div class="col-xs-12 col-md-12">
        <h3>Connecting Flight</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <td>Flight Name</td>
                    <td>From</td>
                    <td>To</td>
                    <td>Departure Date</td>
                    <td>Mileage</td>
                    <td>Total Seats</td>
                    <td>Available Seats</td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.ConnectingFlightList)
                {
                    <tr>
                        <td>@item.FlightName</td>
                        <td>@item.OriginCity</td>
                        <td>@item.DestinationCity</td>
                        <td>@item.DepartureDate</td>
                        <td>@item.Mileage</td>
                        <td>@item.TotalSeats</td>
                        <td>@item.AvailableSeats</td>
                        <td>
                            <a href="@Url.Action("BookFlight", "Flight", new { Id = item.FlightId })" class="btn btn-danger">Book</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@if (Model.FlightList != null)
{
    if (Model.FlightList?.Count > 0)
    {
        <div class="col-xs-12 col-md-12">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <td>Flight Name</td>
                        <td>From</td>
                        <td>To</td>
                        <td>Departure Date</td>
                        <td>Mileage</td>
                        <td>Total Seats</td>
                        <td>Available Seats</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.FlightList)
                    {
                        <tr>
                            <td>@item.FlightName</td>
                            <td>@item.OriginCity</td>
                            <td>@item.DestinationCity</td>
                            <td>@item.DepartureDate</td>
                            <td>@item.Mileage</td>
                            <td>@item.TotalSeats</td>
                            <td>@item.AvailableSeats</td>
                            <td>
                                <a href="@Url.Action("BookFlight", "Flight", new { Id = item.FlightId })" class="btn btn-danger">Book</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    if (Model.FlightList?.Count < 1)
    {
        <div class="col-xs-12 col-md-12 text-center default-div">
            <h2 class="text-center text-danger">No Flights Were Found</h2>
        </div>
    }
}

@if (TempData["ValidCities"] != null)
{
    var cities = (List<string>)TempData["ValidCities"];
    <div class="col-xs-12 col-md-12" style="margin-bottom: 20px;">
        <h3>Suggested Cities</h3>
        @for (int i = 0; i < cities.Count; i++)
        {
            <div class="col-xs-12 col-md-3 city-suggestion-widget">
                <h4 class="text-success">@cities[i].ToUpper()</h4>
            </div>
        }
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
